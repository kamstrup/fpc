package fpc

type refinput struct {
	comp uint
	in   []float64
}

type reftestcase struct {
	comp         uint
	uncompressed []float64
	compressed   []byte
}

// Reference tests which have been generated by running fpc.c
var refTests = []reftestcase{
	{
		comp:         1,
		uncompressed: []float64{},
		compressed: []byte{
			0x01},
	},
	{
		comp:         3,
		uncompressed: []float64{},
		compressed: []byte{
			0x03},
	},
	{
		comp:         10,
		uncompressed: []float64{},
		compressed: []byte{
			0x0a},
	},
	{
		comp:         1,
		uncompressed: []float64{1, 1, 0.9, 0.9},
		compressed: []byte{
			0x01, 0x04, 0x00, 0x00, 0x17, 0x00, 0x00, 0x70,
			0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
			0x3f, 0xcd, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1c,
		},
	},
	{
		comp:         3,
		uncompressed: []float64{1, 1, 0.9, 0.9},
		compressed: []byte{
			0x03, 0x04, 0x00, 0x00, 0x17, 0x00, 0x00, 0x70,
			0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
			0x3f, 0xcd, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1c,
		},
	},
	{
		comp:         10,
		uncompressed: []float64{1, 1, 0.9, 0.9},
		compressed: []byte{
			0x0a, 0x04, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x77,
			0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
			0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
			0x3f, 0xcd, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1c,
		},
	},
	{
		comp:         1,
		uncompressed: []float64{0, 0, 0, 0, 0},
		compressed: []byte{
			0x01, 0x05, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
			0x00, 0x00},
	},
	{
		comp:         3,
		uncompressed: []float64{0, 0, 0, 0, 0},
		compressed: []byte{
			0x03, 0x05, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
			0x00, 0x00},
	},
	{
		comp:         10,
		uncompressed: []float64{0, 0, 0, 0, 0},
		compressed: []byte{
			0x0a, 0x05, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
			0x00, 0x00},
	},
	{
		comp:         1,
		uncompressed: []float64{-1, 1, -2, 2, -3, 3, -4},
		compressed: []byte{
			0x01, 0x07, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x7f,
			0xfe, 0xee, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xf0, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18},
	},
	{
		comp:         3,
		uncompressed: []float64{-1, 1, -2, 2, -3, 3, -4},
		compressed: []byte{
			0x03, 0x07, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x7f,
			0xfe, 0xee, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xf0, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18},
	},
	{
		comp:         10,
		uncompressed: []float64{-1, 1, -2, 2, -3, 3, -4},
		compressed: []byte{
			0x0a,
			0x07, 0x00, 0x00,
			0x3e, 0x00, 0x00,
			0x77, 0xfe, 0xee, 0xe0,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xbf,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18},
	},
	{
		comp:         1,
		uncompressed: []float64{1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 100, 1000, 10000, 100000},
		compressed: []byte{
			0x01, 0x0a, 0x00, 0x00, 0x53, 0x00, 0x00, 0x77,
			0xe6, 0xee, 0xee, 0xee, 0xf1, 0x68, 0xe3, 0x88,
			0xb5, 0xf8, 0xe4, 0x3e, 0xdc, 0x2b, 0xff, 0x63,
			0x57, 0xce, 0xfe, 0x01, 0x95, 0xb4, 0xa4, 0x9f,
			0x5d, 0x17, 0x1f, 0x87, 0xbd, 0x5f, 0x95, 0xac,
			0x18, 0xd4, 0xd0, 0xe2, 0x1a, 0xb6, 0xd5, 0x3f,
			0x03, 0xb9, 0x1e, 0x85, 0xeb, 0x51, 0xb8, 0x1e,
			0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7f, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x4d, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xba, 0x0f},
	},
	{
		comp:         3,
		uncompressed: []float64{1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 100, 1000, 10000, 100000},
		compressed: []byte{
			0x03, 0x0a, 0x00, 0x00, 0x53, 0x00, 0x00, 0x77,
			0xee, 0xee, 0xee, 0xee, 0xf1, 0x68, 0xe3, 0x88,
			0xb5, 0xf8, 0xe4, 0x3e, 0x2d, 0x43, 0x1c, 0xeb,
			0xe2, 0x36, 0x1a, 0x3f, 0xd1, 0xea, 0xed, 0x39,
			0xaf, 0x54, 0x4a, 0x87, 0xbd, 0x5f, 0x95, 0xac,
			0x18, 0xd4, 0xe1, 0x8d, 0x37, 0xde, 0x78, 0xe3,
			0x3d, 0x69, 0x00, 0x6f, 0x81, 0x04, 0xc5, 0x1f,
			0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7f, 0x3c,
			0xda, 0x38, 0x62, 0x2d, 0x7e, 0x01, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xba, 0x0f},
	},
	{
		comp:         10,
		uncompressed: []float64{1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 100, 1000, 10000, 100000},
		compressed: []byte{
			0x0a, 0x0a, 0x00, 0x00, 0x54, 0x00, 0x00, 0x7f,
			0xee, 0xee, 0x7e, 0xee, 0xf1, 0x68, 0xe3, 0x88,
			0xb5, 0xf8, 0xe4, 0x3e, 0xdc, 0x2b, 0xff, 0x63,
			0x57, 0xce, 0xfe, 0x01, 0xd1, 0xea, 0xed, 0x39,
			0xaf, 0x54, 0x4a, 0x87, 0xbd, 0x5f, 0x95, 0xac,
			0x18, 0xd4, 0xe1, 0x8d, 0x37, 0xde, 0x78, 0xe3,
			0x3d, 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0x49,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x40,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xd6, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xc8, 0x4c, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xe2, 0x3b},
	},
}
